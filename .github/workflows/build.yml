name: Docker Build

on:
  push:
    branches:
      - main

jobs:
  check:
    name: Check release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package.outputs.version }}
      major_minor: ${{ steps.package.outputs.major_minor }}
      major: ${{ steps.package.outputs.major }}
      releases: ${{ steps.repo.outputs.released }}
    steps:
      - uses: actions/checkout@v2.3.3

      - id: package
        name: Extract package info
        run: |
          VERSION=$(jq -r .version package.json)
          MAJOR_MINOR=$(jq -r '.version | split(".") | .[:2] | join(".")' package.json)
          MAJOR=$(jq -r '.version | split(".") | first' package.json)
          echo "::set-output name=version::v${VERSION}"
          echo "::set-output name=major_minor::v${MAJOR_MINOR}"
          echo "::set-output name=major::v${MAJOR}"

      - uses: actions/github-script@v4
        id: repo
        env:
          VERSION: ${{ steps.package.outputs.version }}
        with:
          script: |
            try {
              await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: process.env.VERSION,
              })
              core.setOutput('released', true)
            }
            catch (error) {
              if (error.status === 404) {
                core.setOutput('released', false)
              }
            }

  build:
    name: Build and publish
    needs: check
    if: needs.check.outputs.released != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ needs.check.outputs.version }}
            ghcr.io/${{ github.repository }}:${{ needs.check.outputs.major_minor }}
            ghcr.io/${{ github.repository }}:${{ needs.check.outputs.major }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - uses: actions/github-script@v4
        name: Create version release
        env:
          VERSION: ${{ needs.check.outputs.version }}
          COMMIT: ${{ github.sha }}
        with:
          script: |
            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.VERSION,
              target_commitish: process.env.COMMIT,
            })
